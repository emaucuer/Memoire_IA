geom_sf(data = dep_bound, aes(geometry = geometry), color="grey70", fill = NA) +
theme_void() +
guides(fill=guide_legend(title="Coûts cumulés sécheresse en €"))
## PPRI ------------------------------------------------------------------------
#### Submersions marines -------------------------------------------------------
ggplot(data=dataPlot) +
geom_sf(aes(geometry = geometry, fill = as.factor(ppri_submersion)), color = NA) +
scale_fill_manual(values = c("white", "darkblue")) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
theme_void() +
theme(legend.position = "none") +
ggtitle("submersion")
#### somme ppri ----------------------------------------------------------------
ggplot(data=dataPlot) +
geom_sf(aes(geometry = geometry, fill = as.factor(ppri_sum)), color = NA) +
scale_fill_brewer("Blues") +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
theme_void() +
theme(legend.title = element_blank()) +
ggtitle("Somme des ppri")
#### ppri  ---------------------------------------------------------------------
ggplot(data=dataPlot) +
geom_sf(aes(geometry = geometry, fill = as.factor(ppri_inondation)), color = NA) +
scale_fill_manual(values = c("white", "darkblue")) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
theme_void() +
theme(legend.position = "none") +
ggtitle("PPRI avant retraitement")
#### ppri retraite -------------------------------------------------------------
ggplot(data=dataPlot) +
geom_sf(aes(geometry = geometry, fill = as.factor(ppri)), color = NA) +
scale_fill_manual(values = c("white", "darkblue")) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
theme_void() +
theme(legend.position = "none") +
ggtitle("PPRI après retraitement")
## AZI -------------------------------------------------------------------------
#png("../Plots&Resultats/exposition_risques/map_azi.png", units="in", width=8.5, height=5, res=300)
ggplot(data=aziPlot) +
geom_sf(aes(geometry = geometry,fill = as.factor(indic_azi)), color = NA) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
scale_fill_manual(values =c('white','#4292c6')) +
theme_void() +
guides(fill=guide_legend(title="Commune concernée par \nun Atlas de Zone Inondable"))
## ONRN : cout cumule ----------------------------------------------------------
cumul_ino_plot <- cumul_ino %>%
merge(com_bound_wo_om, by.x = "code_insee", by.y="code", all.y=T) %>%
mutate(cout_cat = ifelse(is.na(cout_cat),0,cout_cat))
cumul_ino_plot$cout_cat <- ordered(cumul_ino_plot$cout_cat,
levels = c(0,1,2,4,5),
labels = c("Pas de sinistre",
"< 100k", "100k à 500k",
"500K à 5M",
"> 5M"))
ggplot(data=cumul_ino_plot) +
geom_sf(aes(geometry = geometry, fill = cout_cat), color = NA) +
scale_fill_manual(values = c("white", "#c6dbef", "#6baed6", "#2171b5","#08306b")) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey70", fill = NA) +
theme_void() +
guides(fill=guide_legend(title="Coûts cumulés inonation en €"))
## EAIP ------------------------------------------------------------------------
ggplot(data=eaip_dep_plot) +
geom_sf(aes(geometry = geometry, fill = pop), color = NA) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="white", fill = NA) +
scale_fill_gradient(low = "white", high = "#B90000") +
theme_void()
ggplot(data=eaip_dep_plot) +
geom_sf(aes(geometry = geometry, fill = pop_cat), color = NA) +
scale_fill_manual(values = c('white','#deebf7','#9ecae1', '#4292c6','#08519c')) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey70", fill = NA) +
theme_void() +
guides(fill=guide_legend(title="Population dans l'EAIP \ncours d'eau"))
## EAIP ------------------------------------------------------------------------
ggplot(data=eaip_dep_plot) +
geom_sf(aes(geometry = geometry, fill = pop), color = NA) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="white", fill = NA) +
scale_fill_gradient(low = "white", high = "#B90000") +
theme_void()
## EAIP ------------------------------------------------------------------------
ggplot(data=eaip_dep_plot) +
geom_sf(aes(geometry = geometry, fill = pop), color = NA) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="white", fill = NA) +
scale_fill_gradient(low = "white", high = "#08519c") +
theme_void()
ggplot(data=eaip_dep_plot) +
geom_sf(aes(geometry = geometry, fill = pop_cat), color = NA) +
scale_fill_manual(values = c('white','#deebf7','#9ecae1', '#4292c6','#08519c')) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey70", fill = NA) +
theme_void() +
guides(fill=guide_legend(title="Population dans l'EAIP \ncours d'eau"))
# Data
gaspar <- read_rds("../../Data/Gaspar/gaspar.rds")
gaspar_pl <- read_rds("../../Data/CATNAT/gaspar_pluri_annuel.rds")
gaspar_pl <- read_rds("../../Data/Gaspar/gaspar_pluri_annuel.rds")
infos_com <- read_rds("../../Data/Administratif/infos_communes.rds")
com_bound <- read_rds("../../Data/Data_GIS/geojson/communes-vs.rds")
dep_bound <- read_rds("../../Data/Data_GIS/geojson/departements-vs-om.rds") %>%
filter(code<=95)
gaspar <- gaspar %>% filter(an_debut < 2022)
gaspar_pl <- gaspar_pl %>% filter(an_debut < 2022)
gaspar$localisation <- ifelse(gaspar$dep <= 95, "Métropole", "Outre-Mer")
# -----------------------------------------------------------------------------#
## Duree d un sinistre ----------------------------------------------------------
# -----------------------------------------------------------------------------#
boxplot(gaspar %>% filter(inondation==T) %>% select(duree), outline=FALSE)
boxplot(gaspar %>% filter(secheresse==T) %>% select(duree), outline=FALSE)
# -----------------------------------------------------------------------------#
## Statistiques globales -------------------------------------------------------
# -----------------------------------------------------------------------------#
peril_global <- gaspar %>%
group_by(lib_risque_jo2) %>%
summarize(nb_perils = n()) %>%
ungroup()
### Nb de communes reconnues par an  --------------------------------------------
peril_an <- gaspar %>%
distinct(an_debut, cod_commune) %>%
group_by(an_debut) %>%
summarise(nb_commune = n())
plot_ly(peril_an) %>%
add_bars(x =~ an_debut, y =~ nb_commune, width = 0.6,
marker = list(color = my_colors3[1])) %>%
layout(title = "", #"Nombre de communes reconnues par exercice",
xaxis = list(tickangle = -45,title = ""),
yaxis = list(title = ""),
margin = list(l=50, r=50, b=50, t=50))
my_colors = c("#1DE9B6", "#A6A6A6", "#707070","#363636")
my_colors2 = c("#A6A6A6", "#707070","#363636")
my_colors3 = c("#6A6A6A","#2171B5","#CB181D")
my_colors4 = c("#D0FBF0","#A4F7E2","#76F1D2","#1DE9B6","#11B38A") # nuance vert sia
plot_ly(peril_an) %>%
add_bars(x =~ an_debut, y =~ nb_commune, width = 0.6,
marker = list(color = my_colors3[1])) %>%
layout(title = "", #"Nombre de communes reconnues par exercice",
xaxis = list(tickangle = -45,title = ""),
yaxis = list(title = ""),
margin = list(l=50, r=50, b=50, t=50))
# version pluri annuelle
peril_an_pl <- gaspar_pl %>%
distinct(annee, cod_commune) %>%
group_by(annee) %>%
summarise(nb_commune = n())
plot_ly(peril_an_pl) %>%
add_bars(x =~ annee, y =~ nb_commune, width = 0.6,
marker = list(color = my_colors3[1])) %>%
layout(title = "", #"Nombre de communes reconnues par exercice",
xaxis = list(tickangle = -45,title = "", font.size = 20),
yaxis = list(title = ""),
margin = list(l=50, r=50, b=50, t=50),
font= list(size=25))
mean(peril_an_pl$nb_commune)
summary(peril_an_pl %>% filter(annee != 1982 & annee != 1999))
### Détail de chaque risque par an ---------------------------------------------
peril_an_type <- gaspar %>% group_by(an_debut, lib_risque_jo2) %>%
summarize(nb_perils = n()) %>%
ungroup()
plot_ly(peril_an_type, colors = "Pastel1") %>%
add_trace(x =~ an_debut, y =~ nb_perils, color=~lib_risque_jo2, type = "bar") %>%
layout(barmode = 'stack')
peril_an_type_pl <- gaspar_pl %>% group_by(an_debut, lib_risque_jo2) %>%
summarize(nb_perils = n()) %>%
ungroup()
plot_ly(peril_an_type_pl, colors = "Pastel1") %>%
add_trace(x =~ an_debut, y =~ nb_perils, color=~lib_risque_jo2, type = "bar") %>%
layout(barmode = 'stack')
### Inondation vs Secheresse vs Autre par an -----------------------------------
peril_an_type_agg <- gaspar %>%
group_by(an_debut, lib_risque) %>%
summarize(nb_perils = n()) %>%
ungroup()
plot_ly(peril_an_type_agg, colors = my_colors2) %>%
add_trace(x =~ an_debut, y =~ nb_perils, color=~lib_risque, type = "bar") %>%
layout(barmode = 'stack',
yaxis = list(title = "Nombre de reconaissances CATNAT",
categoryarray = ~lib_risque, categoryorder = "array"),
xaxis = list(title = ""))
# Pluri annuelle
peril_an_type_agg_pl <- gaspar_pl %>%
group_by(annee, lib_risque) %>%
summarize(nb_perils = n()) %>%
mutate(order = ifelse(lib_risque == "Inondation",1,
ifelse(lib_risque == "Sécheresse", 2, 3))) %>%
arrange(order) %>%
ungroup()
plot_ly(peril_an_type_agg_pl, colors = my_colors3) %>%
add_trace(x =~ annee, y =~ nb_perils, color=~lib_risque, type = "bar") %>%
layout(barmode = 'stack',
yaxis = list(title = "", #"Nombre de reconaissances CATNAT",
categoryarray = ~order, categoryorder = "array"),
xaxis = list(title = ""))
### Vision annuelle ---------------------------
inondation_an <- gaspar %>%
filter(inondation == T) %>%
distinct(an_debut, cod_commune) %>%
group_by(an_debut) %>%
summarize(nb_communes = n()) %>%
ungroup()
plot_ly(inondation_an, colors = c("#2171B5")) %>%
add_bars(x =~ an_debut, y =~ nb_communes, color = "#2171B5") %>%
layout(barmode = 'stack',
title = "", #Nombre de communes reconnues par exercice au titre des inondations",
xaxis = list(tickangle = -45, title = "",tickfont = list(size = 18)),
yaxis = list(title = "",tickfont = list(size = 18)),
margin = list(l=50, r=50, b=50, t=50))
mean(inondation_an$nb_communes)
# Version détaillée
inondation_an_detail <- gaspar %>%
filter(inondation == T | num_risque_jo %in% c(67,68,73)) %>%
distinct(an_debut, cod_commune, lib_risque_jo) %>%
group_by(an_debut, lib_risque_jo) %>%
summarize(nb_perils = n()) %>%
ungroup()
plot_ly(inondation_an_detail, colors = "Blues") %>%
add_trace(x =~ an_debut, y =~ nb_perils, color =~ lib_risque_jo, type="bar") %>%
layout(barmode = 'stack',
title = "Nombre de communes reconnues par exercice au titre des inondations",
xaxis = list(tickangle = -45, title = ""),
yaxis = list(title = ""),
margin = list(l=50, r=50, b=50, t=50))
### Decomposition par departement
inondation_dep <- gaspar %>%
filter(inondation==T) %>%
group_by(dep, ncc_dep, an_debut) %>%
summarize(nb_inondation = sum(inondation))
plot_ly(inondation_dep, colors = "Blues") %>%
add_bars(x =~ an_debut, y =~ nb_inondation, color=~ncc_dep, type = "bar") %>%
layout(barmode = 'stack')
peril_an_dep <- gaspar %>% group_by(an_debut, dep, ncc_dep) %>%
summarise(nb_inon = sum(inondation),
nb_sech = sum(secheresse)) %>%
ungroup()
plot_ly(peril_an_dep, colors = "Paired") %>%
add_lines(x =~ an_debut, y =~ nb_inon, color=~ncc_dep)
### Vision aggrégée -------------------------------------
nb_perils_com <- gaspar %>%
group_by(lib_commune, cod_commune) %>%
summarise(inondation = sum(inondation),
secheresse = sum(secheresse, na.rm = T),
catnat = n())
effectifs <- nb_perils_com %>%
merge(com_bound %>% select(code),
by.x = "cod_commune", by.y = "code", all = T) %>%
mutate(inondation = replace_na(inondation, 0)) %>%
group_by(inondation) %>%
summarise(effectifs = n())
library(tidyr)
effectifs <- nb_perils_com %>%
merge(com_bound %>% select(code),
by.x = "cod_commune", by.y = "code", all = T) %>%
mutate(inondation = replace_na(inondation, 0)) %>%
group_by(inondation) %>%
summarise(effectifs = n())
### Decomposition par departement ----------------------------------------------
inondation_dep <- gaspar %>%
filter(inondation==T) %>%
group_by(dep, ncc_dep, an_debut) %>%
summarize(nb_inondation = sum(inondation))
plot_ly(inondation_dep, colors = "Blues") %>%
add_bars(x =~ an_debut, y =~ nb_inondation, color=~ncc_dep, type = "bar") %>%
layout(barmode = 'stack')
peril_an_dep <- gaspar %>% group_by(an_debut, dep, ncc_dep) %>%
summarise(nb_inon = sum(inondation),
nb_sech = sum(secheresse)) %>%
ungroup()
plot_ly(peril_an_dep, colors = "Paired") %>%
add_lines(x =~ an_debut, y =~ nb_inon, color=~ncc_dep)
dataPlot <- nb_perils_com %>%
merge(com_bound, by.x="cod_commune", by.y="code", all.y = T) %>%
filter(cod_commune < 96000) %>%
mutate(inondation = ifelse(is.na(inondation), 0, inondation),
secheresse = ifelse(is.na(secheresse), 0, secheresse),
catnat = ifelse(is.na(catnat), 0, catnat)) %>%
mutate(inondation_cat = case_when(inondation == 0 ~ 0,
inondation %in% c(1,2) ~ 1,
inondation %in% c(3,4,5) ~ 2,
inondation %in% c(6,7,8,9) ~ 3,
inondation > 9 & inondation <= 20 ~ 4,
inondation > 20   ~ 5),
secheresse_cat = case_when(secheresse == 0 ~ 0,
secheresse == 1 ~ 1,
secheresse %in% c(2,3,4) ~ 2,
secheresse %in% c(5,6) ~ 3,
secheresse %in% c(7,8,9,10) ~ 4,
secheresse > 10 ~ 5),
catnat_cat = case_when(catnat == 0 ~ 0,
catnat %in% c(1,2,3) ~ 1,
catnat %in% c(4,5,6) ~ 2,
catnat %in% c(7,8,9,10) ~ 3,
catnat > 10 ~ 4))
lab = c("0", "1-2", "3-5", "6-9", "10-20","> 20")
lab_sec = c("0", "1", "2-4", "5-6", "7-10", "> 10")
lab_cat = c("0", "1-3", "4-6", "7-10", "> 10")
dataPlot$inondation_cat <- ordered(dataPlot$inondation_cat,
levels = c(0,1,2,3,4,5),
labels = lab)
dataPlot$secheresse_cat <- ordered(dataPlot$secheresse_cat,
levels = c(0,1,2,3,4,5),
labels = lab_sec)
dataPlot$catnat_cat <- ordered(dataPlot$catnat_cat,
levels = c(0,1,2,3,4),
labels = lab_cat)
### All cat --------------------------------------------------------------------
ggplot(data=dataPlot) +
geom_sf(aes(geometry = geometry,fill = catnat_cat), color = NA) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
scale_fill_manual(values =c("white", "#D0FBF0","#A4F7E2","#1DE9B6","#11B38A")) +
theme_void() +
guides(fill=guide_legend(title="Nombre de reconnaissances par commune"))
ggplot(data=dataPlot) +
geom_sf(aes(geometry = geometry,fill = catnat_cat), color = NA) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
scale_fill_manual(values =c("white", "#C6C6C6","#919191","#5E5E5E","#303030")) +
theme_void() +
guides(fill=guide_legend(title="Nombre de reconnaissances par commune"))
### Inondation -----------------------------------------------------------------
ggplot(data=dataPlot) +
geom_sf(aes(geometry = geometry, fill = inondation), colour = NA) +
geom_sf(data = dep_bound, aes(geometry = geometry), color="grey40", fill = NA) +
scale_fill_gradient(low = "white", high = "#084594") +
theme_void() +
ggtitle("Nombre de CATNAT inondation depuis le début du régime")
library(dplyr)
dep_bound <- readRDS("../../Data/Data_GIS/geojson/departements-vs-om.rds") %>%
dplyr::filter(code<=95)
library(sf)
dep_bound <- readRDS("../../Data/Data_GIS/geojson/departements-vs-om.rds") %>%
dplyr::filter(code<=95)
grille_safran <- read.csv2("../../Data/aladin/grilleSafran_utile_drias2021.csv")
leaflet(dep_bound) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)  %>%
setView(lng = 3, lat = 47, zoom = 4) %>%
addPolygons(color = "grey", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5) %>%
addCircleMarkers(data = grille_safran, ~as.numeric(longitude), ~as.numeric(latitude),
stroke = FALSE, radius = 2, fillOpacity  = 1)
library(leaflet)
leaflet(dep_bound) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)  %>%
setView(lng = 3, lat = 47, zoom = 4) %>%
addPolygons(color = "grey", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5) %>%
addCircleMarkers(data = grille_safran, ~as.numeric(longitude), ~as.numeric(latitude),
stroke = FALSE, radius = 2, fillOpacity  = 1)
grille <- grille_safran %>% filter(X..idPointDrias < 300)
# PREPARATION DES DONNEES ------------------------------------------------------
## Chargement des donnees ------------------------------------
# Data insee
insee_dep <- read_csv("../../Data/Administratif/cog_ensemble_2021_csv/departement2021.csv")
# Libraries
library(readr)
library(dplyr)
# PREPARATION DES DONNEES ------------------------------------------------------
## Chargement des donnees ------------------------------------
# Data insee
insee_dep <- read_csv("../../Data/Administratif/cog_ensemble_2021_csv/departement2021.csv")
insee_reg <- read_csv( "../Data/cog_ensemble_2021_csv/region2021.csv")
insee_reg <- read_csv( "../../Data/Administratif/cog_ensemble_2021_csv/region2021.csv")
infos_com <- read_rds("../../Data/Administratif/infos_communes.rds")
# Data gaspar
gaspar <- read_rds("../../Data/Gaspar/input/catnat_gaspar.csv")
code_catnat <- read_csv2("../Data/Gaspar/input/code_jo_catnat.csv")
# Data gaspar
gaspar <- read_csv2("../../Data/Gaspar/input/catnat_gaspar.csv")
code_catnat <- read_csv2("../Data/Gaspar/input/code_jo_catnat.csv")
code_catnat <- read_csv2("../../Data/Gaspar/input/code_jo_catnat.csv")
code_catnat <- read_csv2("../../Data/Gaspar/code_jo_catnat.csv")
# Valeurs manquantes
sapply(gaspar, function(x) sum(is.na(x)))
summary(gaspar)
## Prep donnees INSEE ------------------------------------------------
names(insee_dep) <- names(insee_dep) %>% stri_trans_tolower()
names(insee_reg) <- names(insee_reg) %>% stri_trans_tolower()
library(stringi)
## Prep donnees INSEE ------------------------------------------------
names(insee_dep) <- names(insee_dep) %>% stri_trans_tolower()
names(insee_reg) <- names(insee_reg) %>% stri_trans_tolower()
insee <- insee_dep %>% select(dep, libelle, reg) %>%
merge(insee_reg %>% select(reg, libelle), by = "reg", suffixes = c("_dep", "_reg"))
## Variables temporelles ---------------------------------------------
gaspar <- gaspar %>%
mutate(dat_deb = ymd(dat_deb),
dat_fin = ymd(dat_fin),
an_debut = as.integer(year(dat_deb)),
an_fin = as.integer(year(dat_fin)),
duree = dat_fin-dat_deb +1,
dat_pub_arrete = ymd(dat_pub_arrete)) %>%
rename(date_debut = dat_deb, date_fin = dat_fin)
library(lubridate)
## Variables temporelles ---------------------------------------------
gaspar <- gaspar %>%
mutate(dat_deb = ymd(dat_deb),
dat_fin = ymd(dat_fin),
an_debut = as.integer(year(dat_deb)),
an_fin = as.integer(year(dat_fin)),
duree = dat_fin-dat_deb +1,
dat_pub_arrete = ymd(dat_pub_arrete)) %>%
rename(date_debut = dat_deb, date_fin = dat_fin)
gaspar <- gaspar %>% mutate(mois_deb = month(date_debut),
mois_fin = month(date_fin))
## Variable perils -------------------------------------------------------
gaspar <- gaspar %>%
merge(code_catnat %>% select(Code, lib_risque_jo2), by.x = "num_risque_jo", by.y = "Code") %>%
mutate(inondation = num_risque_jo == 54 | num_risque_jo == 61 ,
secheresse = ifelse(an_debut >= 1988, num_risque_jo == 59, NA),
inondation_all = lib_risque_jo2 == "Inondation",
lib_risque = ifelse(lib_risque_jo2 %in% c("Inondation", "Sécheresse"), lib_risque_jo2, "Autre"))
## Variables géographiques --------------------------------------------
# Ajout du code département
gaspar$dep <- substr(gaspar$cod_commune,1,2)
gaspar$dep <- ifelse(as.integer(gaspar$dep>95), substr(gaspar$cod_commune,1,3), gaspar$dep) #cas des dom-tom
# Ajout infos insee dep et reg
gaspar <- gaspar %>%
merge(insee, by="dep")
## Table inondation et sécheresse -------------------------------
gaspar_ino <- gaspar %>%
filter(inondation == TRUE) %>%
select(-secheresse, -inondation, -inondation_all)
gaspar_sec <- gaspar %>%
filter(secheresse == TRUE) %>%
select(-secheresse, -inondation, -inondation_all)
# STAT DESC ------------------------------------------------------
table(gaspar_ino$mois_deb)
table(gaspar_ino$mois_fin)
gaspar_ino_ag <- gaspar_ino %>% group_by(an_debut, mois_deb) %>%
summarise(ino = n())
all_y_m <- read.delim("clipboard")
gaspar_ino_ag <- gaspar_ino %>%
group_by(an_debut, mois_deb) %>%
summarise(ino = n()) %>%
merge(all_y_m, by.x = c("an_debut", "mois_deb"), by.y = c("an", "mois"), all.y = T) %>%
replace(is.na(.), 0) %>%
filter((an_debut>1982 & an_debut<2022) |
(an_debut==1982 & mois_deb >= 8) |
(an_debut==2022 & mois_deb <= 3)) %>%
mutate(ym = paste(an_debut,mois_deb, sep = "-"))
gaspar <- read_rds("../../Data/Gaspar/gaspar.rds")
## Table inondation et sécheresse -------------------------------
gaspar_ino <- gaspar %>%
filter(inondation == TRUE) %>%
select(-secheresse, -inondation, -inondation_all)
gaspar_sec <- gaspar %>%
filter(secheresse == TRUE) %>%
select(-secheresse, -inondation, -inondation_all)
# STAT DESC ------------------------------------------------------
table(gaspar_ino$mois_deb)
gaspar <- gaspar %>% mutate(mois_deb = month(date_debut),
mois_fin = month(date_fin))
## Table inondation et sécheresse -------------------------------
gaspar_ino <- gaspar %>%
filter(inondation == TRUE) %>%
select(-secheresse, -inondation, -inondation_all)
gaspar_sec <- gaspar %>%
filter(secheresse == TRUE) %>%
select(-secheresse, -inondation, -inondation_all)
# STAT DESC ------------------------------------------------------
table(gaspar_ino$mois_deb)
table(gaspar_ino$mois_fin)
rep(1:12,2)
an <- sort(rep(1982:2021, 12))
an
mois <- rep(1:12, 2021-1982+1)
all_y_m <- data.table(an, mois) # a partir de excel, faire un copier coller
library(data.table)
all_y_m <- data.table(an, mois)
gaspar_ino_ag <- gaspar_ino %>%
group_by(an_debut, mois_deb) %>%
summarise(ino = n()) %>%
merge(all_y_m, by.x = c("an_debut", "mois_deb"), by.y = c("an", "mois"), all.y = T) %>%
replace(is.na(.), 0) %>%
filter((an_debut>1982 & an_debut<2022) |
(an_debut==1982 & mois_deb >= 8) |
(an_debut==2022 & mois_deb <= 3)) %>%
mutate(ym = paste(an_debut,mois_deb, sep = "-"))
plot_ly(gaspar_ino_ag) %>%
add_lines(x =~ ym, y =~ ino) %>%
layout(title = "", #"Nombre de communes reconnues par exercice",
xaxis = list(tickangle = -45,title = ""),
yaxis = list(title = ""),
margin = list(l=50, r=50, b=50, t=50))
library(plotly)
plot_ly(gaspar_ino_ag) %>%
add_lines(x =~ ym, y =~ ino) %>%
layout(title = "", #"Nombre de communes reconnues par exercice",
xaxis = list(tickangle = -45,title = ""),
yaxis = list(title = ""),
margin = list(l=50, r=50, b=50, t=50))
plot_ly(gaspar %>%
filter(inondation_all == T) %>%
group_by(mois_deb, lib_risque_jo) %>%
summarise(ino = n() )) %>%
add_bars(x =~ mois_deb, y =~ ino, color =~ lib_risque_jo ) %>%
layout(title = "", #"Nombre de communes reconnues par exercice",
xaxis = list(tickangle = -45,title = ""),
yaxis = list(title = ""),
margin = list(l=50, r=50, b=50, t=50),
barmode = 'stack')
View(all_y_m)
# Import data ------------------------------------------------------------
dataCoord <- read_rds("../../Data/Administratif/coordCom2018.rds")
dataVar <- read_delim("../../Data/aladin/indicesALADIN63_CNRM-CM5_1982_2005_all.txt",
delim = ";", skip = 44) # skip = 27
dataVar <- dataVar %>%
rename_with(~ tolower(gsub("#| ", "",.x))) %>%
filter(! is.na(longitude)) %>%
select(-starts_with("..")) %>%
mutate(expo=1) %>%
filter(annee==2000)
# ---------------------------------------------------------------------------- #
# Plot -------------------------------------------------------------------------
# ---------------------------------------------------------------------------- #
com_bound <- read_rds("../../Data/Data_GIS/geojson/communes-om.rds") %>%
dplyr::filter(substr(code,1,2)==91)
library(utils)
